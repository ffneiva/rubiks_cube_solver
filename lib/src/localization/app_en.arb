{
  "@@locale": "en",

  "appTitle": "Rubik Cube Solver",
  
  "settingsTitle": "Settings",

  "confirmButton": "Confirm",
  "backButton": "Back",
  "closeButton": "Close",
  "solve": "Solve",
  "error": "Error",
  "date": "Date",
  "confirmExit": "Confirm Exit",
  
  "rubikPage": "Rubik's Cube",
  "settingsPage": "Settings",
  "historicPage": "History",

  "generalSettings": "General Settings",
  "cubeSettings": "Cube Settings",

  "settingsTheme": "Theme",
  "settingsSystemTheme": "System Theme",
  "settingsLightTheme": "Light Theme",
  "settingsDarkTheme": "Dark Theme",

  "settingsLanguage": "Language",
  "settingsPortuguese": "Portuguese",
  "settingsEnglish": "English",
  "settingsSpanish": "Spanish",
  "settingsFrench": "French",

  "settingsPickColor": "Pick a color",
  "settingsUpColor": "Top color",
  "settingsLeftColor": "Left color",
  "settingsFrontColor": "Front color",
  "settingsRightColor": "Right color",
  "settingsBackColor": "Back color",
  "settingsDownColor": "Bottom color",

  "projection": "Projection",
  "projectionUp": "Top side projection",
  "projectionLeft": "Left side projection",
  "projectionFront": "Front side projection",
  "projectionRight": "Right side projection",
  "projectionBack": "Back side projection",
  "projectionDown": "Bottom side projection",
  
  "rubikCubeClearColors": "Clear colors",

  "historicErrorLoadingData": "Error loading data",
  "historicNoData": "No data stored in history",
  "historicClearData": "Clear History",
  "historicClearAllDataConfirmation": "Confirm deletion of entire history?",
  "historicClearDataConfirmation": "Confirm deletion of solution ({index}): \"{solution}\"?",
  "historicMovesQuantity": "Number of Moves",

  "messageNotFilled": "Did not fill all stickers",
  "messageInvalidFilling": "Invalid filling, change the colors",
  "messageNotFindSolution": "Could not find a solution",
  "messageCubeSolved": "The cube is already solved",
  "messageUnexpectedError": "An unexpected error occurred",
  "messageSolve": "Solution of {moves} moves found in {time} seconds"
}
